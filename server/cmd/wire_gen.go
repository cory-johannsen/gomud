// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/cory-johannsen/gomud/internal/config"
	"github.com/cory-johannsen/gomud/internal/engine"
	"github.com/cory-johannsen/gomud/internal/generator"
	"github.com/cory-johannsen/gomud/internal/loader"
	"github.com/cory-johannsen/gomud/internal/storage"
	"github.com/stanipetrosyan/go-eventbus"
)

// Injectors from wire.go:

func InitializeEngine() (*engine.Engine, error) {
	configConfig, err := config.NewConfigFromEnv()
	if err != nil {
		return nil, err
	}
	database, err := storage.NewDatabase(configConfig)
	if err != nil {
		return nil, err
	}
	appearanceLoader := loader.NewAppearanceLoader(configConfig)
	alignmentLoader := loader.NewAlignmentLoader(configConfig)
	traitLoader := loader.NewTraitLoader(configConfig)
	archetypeLoader := loader.NewArchetypeLoader(configConfig, traitLoader)
	backgroundLoader := loader.NewBackgroundLoader(configConfig, traitLoader)
	injuryLoader := loader.NewInjuryLoader(configConfig)
	skillLoader := loader.NewSkillLoader(configConfig)
	talentLoader := loader.NewTalentLoader(configConfig)
	jobLoader := loader.NewJobLoader(configConfig, archetypeLoader, skillLoader, talentLoader, traitLoader)
	eventBus := goeventbus.NewEventBus()
	roomLoader := loader.NewRoomLoader(configConfig, eventBus)
	teamLoader := loader.NewTeamLoader(configConfig)
	loaders := loader.NewLoaders(appearanceLoader, alignmentLoader, archetypeLoader, backgroundLoader, injuryLoader, jobLoader, roomLoader, skillLoader, talentLoader, traitLoader, teamLoader)
	players := storage.NewPlayers(database, loaders)
	playerGenerator := generator.NewPlayerGenerator(loaders)
	clock := engine.NewClock(eventBus, configConfig)
	server := engine.NewServer(configConfig, database, players, loaders, playerGenerator, eventBus, clock)
	engineEngine := engine.NewEngine(configConfig, server, eventBus)
	return engineEngine, nil
}
